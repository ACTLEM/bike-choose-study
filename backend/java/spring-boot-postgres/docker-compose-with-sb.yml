version: '3.8'
services:
  spring-boot-postgres1:
    image: actlem/spring-boot-postgres
    container_name: spring-boot-postgres1
    environment:
      POSTGRES_HOST: 'postgres_container'
    networks:
      - postgres
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 256M

  spring-boot-postgres2:
    image: actlem/spring-boot-postgres
    container_name: spring-boot-postgres2
    environment:
      POSTGRES_HOST: 'postgres_container'
    networks:
      - postgres
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 256M

  load-balancer:
    image: nginx:1.17.10-alpine
    container_name: load-balancer-sb-postgres
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - postgres
    depends_on:
      - spring-boot-postgres1
      - spring-boot-postgres2

  postgres:
    image: postgres:14-alpine
    container_name: postgres_container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bike
    ports:
      - "5432:5432"
    volumes:
      - postgresdata:/var/lib/postgresql/data
    networks:
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1024M

volumes:
  postgresdata:
    driver: local

networks:
  postgres:
    driver: bridge
